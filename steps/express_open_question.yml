id: express_open_question
learningObjectives:
  - Reflect on creating routes using Express.js.
hints:
  - Think about the Express app methods like 'app.get()'.
  - Consider creating a basic GET request handler.
startFlow:
  do:
    - actionId: bot_message
      params:
        person: lucca
        messages:
          - text: Express.js makes routing a breeze within web applications. Describe how
              you would set up a simple route in Express.js.
trigger:
  type: user_message
  params:
    person: lucca
  flowNode:
    do:
      - actionId: parse_user_response
        name: user_answer
        params:
          prompt: "

            \    Please evaluate the user's answer in relation to
            the expected answer: Check if the response includes creating an app
            instance, using app.get() or app.post() methods, and providing a
            response using res.send(). It should reflect basic Express routing
            use..

            \    # Assessment Criteria

            \    - Determine if the user's response demonstrates a
            clear understanding of the key concepts and ideas presented in the
            expected answer.

            \    - Consider synonyms, paraphrasing, and different
            phrasing that convey the same meaning.

            \    - Be flexible and focus on the essence of the
            answer rather than exact wording.

            \ \ 

            \    # Response Guidelines:

            \    - If the user's answer is correct or shows
            sufficient understanding, return 'correct: true'.

            \      - Provide a positive and affirming message,
            congratulating them and reinforcing their understanding.

            \    - If the user's answer is incorrect or incomplete,
            return 'correct: false'.

            \      - Gently explain why the answer is not fully
            correct or what may be missing.

            \      - Encourage them to try again, being empathetic
            and supportive.

            \ \ 

            \    # Tone and Style:

            \    - Use friendly and encouraging language.

            \    - Be empathetic to the user's learning process.

            \    - Focus on helping the user learn and understand
            the material.

            \  "
          schema:
            correct: boolean
            reply: string
    if:
      conditions:
        - conditionId: is_truthy
          params:
            value: ${outputs.user_answer.value.correct}
      then:
        do:
          - actionId: bot_message
            params:
              person: lucca
              messages:
                - text: ${outputs.user_answer.value.reply}
          - actionId: bot_message
            params:
              person: lucca
              messages:
                - text: You've journeyed through the expressive world of Node.js and its wonders.
                    From setting up your own server to exploring Express.js,
                    you're now well-equipped to venture further into web
                    development. Remember, I'm always just a 'hello' away for
                    another coding session or to answer any questions you might
                    have. Keep building and remember that every great app starts
                    with a single line of code. Until next time, stay awesome!
          - actionId: finish_step
      else:
        do:
          - actionId: bot_message
            params:
              person: lucca
              messages:
                - text: ${outputs.user_answer.value.reply}
